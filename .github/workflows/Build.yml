name: Build
run-name: "Build #${{ github.run_number }}"

on:
  pull_request:
    paths-ignore:
      - '*.md'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-native:
    name: Build Native
    strategy:
      matrix:
        os: [ macos-latest,  windows-latest, ubuntu-20.04 ]
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

#      - name: Cache Kotlin Native Compiler
#        uses: actions/cache@v3
#        with:
#          path: ~/.konan
#          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: ${{ runner.os }}-konan-

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 8

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Link executable native
        uses: gradle/gradle-build-action@v2
        with:
          arguments: linkDebugExecutableNative

      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

      - name: Upload Native
        uses: actions/upload-artifact@v3
        with:
          name: native-package-linux
          path: build/bin/native/debugExecutable

#env:
#  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=true -Dkotlin.incremental=false -Dorg.gradle.project.kotlin.incremental.multiplatform=false -Dorg.gradle.project.kotlin.native.disableCompilerDaemon=true -Dorg.gradle.jvmargs="-Xmx5g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"